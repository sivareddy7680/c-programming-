                   day4 experiments

EASY:

1)student information in structure

#include <stdio.h>
#include <string.h>
struct student
{
	char name[50];
	int rollno;
	int marks;
};
int main()
{
	struct student s;
	printf("enter the information of students:\n\n");
	printf("enter name:");
	scanf("%s",s.name);
	
	printf("enter rollno:");
	scanf("%d",&s.rollno);
	
	printf("enter marks:");
	scanf("%d",&s.marks);
	
	printf("\ndisplaying information\n");
	
	printf("name:%s\n",s.name);
	   printf("rollno:%d\n",s.rollno);
	   printf("marks:%d\n",s.marks);
	   return 0;
}

********************************************************************************************

2)student information using pointer object

#include <stdio.h>
int main(){
	struct student
{
	char name[50];
	int rollno;
	int marks;
};

	struct student s1;
	struct student*ptr;
	ptr=&s1;
	printf("enter the information of students::\n");
	printf("enter name of student::");
	scanf("%s",ptr->name);
	
	printf("enter rollno::");
	scanf("%d",&ptr->rollno);
	
	printf("enter marks::");
	scanf("%d",&ptr->marks);
	
	printf("\nentered details of student are::\n");
	
	printf("\nname:%s \n\nrollno:%d \n\nmarks:%d \n\n",ptr->name,ptr->rollno,ptr->marks);
	return 0;
}
****************************************************************************************

3)book details using structure

#include <stdio.h>
struct book
{
	char book_name[20];
	int bookid;
	float book_price;
	char author[15];
};
int main()
{
	struct book b[3];
	int i;
	for(i=0;i<3;i++)
	{
		printf("enter details of book #%d\n",i+1);
		printf("enter book id:");
		scanf("%d",&b[i].bookid);
		printf("enter book name:");
		scanf("%s",b[i].book_name);
		printf("enter book author:");
		scanf("%s",b[i].author);
		printf("enter book price:");
		scanf("%f",&b[i].book_price);
    }
    for(i=0;i<3;i++)
    {
    	printf("\nbook 5d.........\n\n",i+1);
    	printf("book id:%d\n",b[i].bookid);
    	printf("book name:%d\n",b[i].book_name);
    	printf("book author:%d\n",b[i].author);
    	printf("book price:%d\n",b[i].book_price);
	}
    return 0;
}

********************************************************************
4)total and percentage using structure

#include <stdio.h>
 
struct student
{
    char name [30];
    int  marks[ 5];
    int  total;
    float percentage;
};
 
int main()
{
    struct student std;
    int i;
 
    printf("Enter name: ");
    gets(std.name);
 
    printf("Enter marks:\n");
    std.total=0;
    for(i=0;i< 5;i++){
        printf("Marks in subject %d: ",i+1);
        scanf("%d",&std.marks[i]);
        std.total+=std.marks[i];
    }
    std.percentage=(float)((float)std.total/(float)500)*100;
 
    printf("\nName: %s \nTotal Marks: %d \nPercentage: %.2f",std.name,std.total,std.percentage);
 
    return 0;
}
________________________________________________________________________________

5)student mark using structure

#include <stdio.h>
struct student
{
    char name[50];
    int roll;
    float marks;
};
int main()
{
    struct student s;
    
 printf("Enter The Information of Students :\n\n");
    
 printf("Enter Name : ");
    scanf("%s",s.name);
    
 printf("Enter Roll No. : ");
    scanf("%d",&s.roll);
    
    printf("Enter marks : ");
    scanf("%f",&s.marks);
    
    printf("\nDisplaying Information\n");
    
 printf("Name: %s\n",s.name);
    printf("Roll: %d\n",s.roll);
    printf("Marks: %.2f\n",s.marks);
    return 0;
}

*******************************************************************************************
6)Add complex numbers using structures

#include<stdio.h>

struct complex
{
    float real;
    float imaginary;
};

int main()
{
    
    struct complex cnum1, cnum2, sum;
    printf("Enter  first complex number:\n");
    scanf("%f%f", &cnum1.real, &cnum1.imaginary);
    printf("Enter  second complex number:\n");
    scanf("%f%f", &cnum2.real, &cnum2.imaginary);

    sum.real = cnum1.real + cnum2.real;
    sum.imaginary = cnum1.imaginary + cnum2.imaginary;

    printf("SUM = %0.2f + i %0.2f", sum.real, sum.imaginary);

    return 0;
}
*********************************************************************************************************************
7)student percentage using union

#include<stdio.h>
#include<conio.h>
 
void main() {
   struct student {
      char name[30];
      
      int rollno;
      float percentage;
   };
 
   union details {
      struct student st;
   };
   union details set;
 
   printf("Enter details:");
 
   printf("\nEnter name : ");
   scanf("%s", set.st.name);
   printf("\nEnter roll no : ");
   scanf("%d", &set.st.rollno);
 
   
 
   
   printf("\nEnter percentage :");
   scanf("%f", &set.st.percentage);
 
   printf("\nThe student details are : \n");
   printf("\name : %s", set.st.name);
   printf("\nRollno : %d", set.st.rollno);
   
   printf("\nPercentage : %f", set.st.percentage);
 
   getch();
}

*************************************************************************************************
8)SUB COMPLEX NUMBERS USING STRING

#include <stdio.h>
 
struct complex
{
   int r, i;
};
 
int main()
{
   struct complex a, b, c;

   printf("Enter  first complex number (a + ib): ");
   scanf("%d%d", &a.r, &a.i);
   printf("Enter second complex number (c + id): ");
   scanf("%d%d", &b.r, &b.i);
 
   c.r = a.r - b.r;
   c.i = a.i - b.i;
   
   if (c.i >= 0)
	printf("Difference of the complex numbers = %d + %di", c.r, c.i);
   else
	printf("Difference of the complex numbers = %d %di", c.r, c.i);
 
   return 0;
}

*****************************************************************************************************
9)MULTIPLY COMPLEX NUMBER USING STRUCTURE

#include<stdio.h>


struct complex
{
    float real;
    float imaginary;
};

int main()
{
    
    struct complex cnum1, cnum2, mul;
    printf("Enter  first complex number:\n");
    scanf("%f%f", &cnum1.real, &cnum1.imaginary);
    printf("Enter  second complex number:\n");
    scanf("%f%f", &cnum2.real, &cnum2.imaginary);

    mul.real = cnum1.real * cnum2.real - cnum1.imaginary * cnum2.imaginary;
    mul.imaginary = cnum1.real * cnum2.imaginary + cnum2.real * cnum1.imaginary;

    printf("PRODUCT = %0.2f + i %0.2f", mul.real, mul.imaginary);

    return 0;
}
************************************************************************************************************************************************

MEDIUM:

1)ADD,SUB,MUL,DIV OF COMPLEX NUMBERS USING STRUCTURES

#include <stdio.h>
#include <conio.h>
struct complex
{
   float real, imag;
}a, b, c;
   struct complex read(void);
   void write(struct complex);
   struct complex add(struct complex, struct complex);
   struct complex sub(struct complex, struct complex);
   struct complex mul(struct complex, struct complex);
   struct complex div(struct complex, struct complex);
void main ()
{
 
   printf("Enter the 1st complex number\n ");
   a = read();
   write(a);
   printf("Enter  the 2nd complex number\n");
   b = read();
   write(b);
   printf("Addition\n ");
   c = add(a, b);
   write(c);
   printf("Substraction\n ");
   c = sub(a, b);
   write(c);
   printf("Multiplication\n");
   c = mul(a, b);
   write(c);
   printf("Division\n");
   c = div(a, b);
  write(c);
  getch();
}
struct complex read(void)
{
   struct complex t;
   printf("Enter the real part\n");
   scanf("%f", &t.real);
   printf("Enter the imaginary part\n");
   scanf("%f", &t.imag);
   return t;
}
void write(struct complex a)
{
   printf("Complex number  is\n");
   printf(" %.1f + i %.1f", a.real, a.imag);
   printf("\n");
}
struct complex add(struct complex p, struct complex q)
{
   struct complex t;
   t.real = (p.real + q.real);
   t.imag = (p.imag + q.imag);
   return t;
}
struct complex sub(struct complex p, struct complex q)
{
   struct complex t;
   t.real = (p.real - q.real);
   t.imag = (p.imag - q.imag);
   return t;
}
struct complex mul(struct complex p, struct complex q)
{
   struct complex t;
   t.real=(p.real * q.real) - (p.imag * q.imag);
   t.imag=(p.real * q.imag) + (p.imag * q.real);
   return t;
}
struct complex div(struct complex p, struct complex q)
{
   struct complex t;
   t.real = ((p.imag * q.real) - (p.real * q.imag)) / ((q.real * q.real) + (q.imag * q.imag));
   t.imag = ((p.real * q.real) + (p.imag * q.imag)) / ((q.real * q.real) + (q.imag * q.imag));
   return(t);
}

***********************************************************************

2)STUDENT INFO USING DYNAMIC MALLOC OF STRUCTURE:

# include <string.h>
# include <stdio.h>
struct student
{
        char name[10];
        int m[3];
        int total;
        char result[5];
}*p,*s;
        void main()
    {
              int i,j,l,n;
              
              printf("Enter the no. of students : ");
              scanf("%d",&n);
              p=(struct student*)malloc(n*sizeof(struct student));
              s=p;
              for(i=0;i<n;i++)
                  {
                             printf("Enter a name : ");
                             scanf("%s",&p->name);
                             p-> total=0;l=0;
                             for(j=0;j<3;j++)
                                {
                                     one:printf("Enter Marks of %d Subject : ",j+1);
                                     scanf("%d",&p->m[j]);
                                     if((p->m[j])>100)
                                        {
                                            printf("Wrong Value Entered");
                                            goto one;
                                        }
                                            p->total+=p->m[j];
                                            if(p->m[j]<40)
                                                l=1;
                                  }
                                            if(l==0)
                                              strcpy(p->result,"PASS");
                                            else
                                              strcpy(p->result,"FAIL");
                                              p++;
                      }
                                              for(i=0;i<n;i++)
                                                  {
                                                        printf("\n%s\t%s",s->name,s->result);
                                                        s++;
                                                  }
                                                        getch();
       } 
       
       
****************************************************************************************************************
3)STUDENT INFO BY PASSING STRUCTURE TO FUNCTION:

#include <stdio.h>
struct student {
    char name[50];
    int age;
    
} s;

int main() {
    printf("Enter information:\n");
    printf("Enter name: ");
    fgets(s.name, sizeof(s.name), stdin);

    printf("Enter age: ");
    scanf("%d", &s.age);
    

    printf("Displaying Information:\n");
    printf("Name: ");
    printf("%s", s.name);
    printf("age: %d\n", s.age);
    

    return 0;
}
********************************************************************************************************
TOUGH:

1)STUDENT GRADE USING STRUCTURE

#include <stdio.h>
#include <conio.h>
struct student{
    char name[25];
    int rollno;
    int m1,m2,m3,m4;
    int marks=m1+m2+m3+m4/4;
    char grade;
};
main()
{
    struct student stud[15];
    int i,n;

    printf("ENTER THE NUMBER OF STUDENTS:");
    scanf("%d",&n);

    for(i=0;i<n;i++)
    {
        printf("ENTER STUDENT INFORMATION:\n");
        printf("NAME:");
        scanf("%s",&stud[i].name);
        printf("ROLLNO:");
        scanf("%d",&stud[i].rollno);
        printf("python:");
        scanf("%d",&stud[i].m1);
        printf("c programming:");
        scanf("%d",&stud[i].m2);
        printf("physics:");
        scanf("%d",&stud[i].m3);
        printf("maths:");
        scanf("%d",&stud[i].m4);
        
        printf("MARKS(In Percentage):",stud[i].marks);
        
        printf("\n");
    }

 
    for(i=0;i<n;i++)
    {
        if(stud[i].marks <= 50) 
        { 
            stud[i].grade = 'F'; 
        } 
        else if(stud[i].marks > 50 && stud[i].marks <= 55) 
        { 
            stud[i].grade = 'D'; 
        } 
        else if(stud[i].marks > 55 && stud[i].marks <= 60) 
        { 
            stud[i].grade = 'C'; 
        } 
        else if(stud[i].marks > 60 && stud[i].marks <= 75) 
        { 
            stud[i].grade = 'B'; 
        } 
        else if (stud[i].marks > 75 && stud[i].marks <= 90) 
        { 
            stud[i].grade = 'A'; 
        } 
        else if(stud[i].marks > 90)
        {
            stud[i].grade = 'S';
        }
    }
    for(i = 0;i<40;i++)
    printf("_");printf("\n");
    printf("Name\tRollNo\tMarks\tGrade\n");
    for(i = 0;i<40;i++)
    printf("_");printf("\n");
    for(i=0;i<n;i++)
        {
        printf("%s\t%d\t%d\t%c\n",stud[i].name,stud[i].rollno,stud[i].marks,stud[i].grade);
   }
    for(i = 0;i<40;i++)
   printf("_");printf("\n");
   getch();
       return 0;
}
